version: 2

jobs:
  lint:
    docker:
      - image: python:3.6.4
    steps:
      - checkout
      - run: pip install pre-commit
      - restore_cache:
          keys:
            - cache-pre-commit-{{ checksum ".pre-commit-config.yaml" }}
      - run: pre-commit run --all-files
      - save_cache:
          key: cache-pre-commit-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit

  hexclock:
    docker:
      - image: mysocialobservations/docker-tdewolff-minify
    steps:
      - run:
          name: install dependencies
          command: apk add --update ca-certificates openssl
      - checkout
      - run: mkdir -p build/hexclock
      - run: cp shared/* build/hexclock/
      - run: cp hexclock/* build/hexclock/
      - run: minify --recursive --output build/ build/
      - persist_to_workspace:
          root: artifacts
          paths:
            - hexclock/

  quotes:
    docker:
      - image: mysocialobservations/docker-tdewolff-minify
    steps:
      - run:
          name: install dependencies
          command: apk add --update ca-certificates curl jq openssl
      - checkout
      - run: mkdir -p build/quotes
      - run: cp shared/* build/quotes/
      - run: cp quotes/* build/quotes/
      - run:
          name: get quotes
          command: |
            curl -X POST https://content.dropboxapi.com/2/files/download \
                -H "Authorization: Bearer ${DROPBOX_TOKEN}" \
                -H "Dropbox-API-Arg: {\"path\": \"/vimwiki/quotes.wiki\"}" \
                -o /quotes.wiki
            jq -n --arg x "$(cat /quotes.wiki)" '$x | split("\n")' > build/quotes/quotes.json
      - run: minify --recursive --output build/ build/
      - persist_to_workspace:
          root: artifacts
          paths:
            - quotes/

  site:
    docker:
      - image: python:3.6.4
    steps:
      - checkout
      - run: python3 -m pip install -r site/requirements.txt
      - run: cp shared/* site/static/
      - run: python3 site/build.py
      - run: pygmentize -S emacs -f html -a .highlight > site/build/emacs.css
      - persist_to_workspace:
          root: site
          paths:
            - build/

  site-minify:
    docker:
      - image: mysocialobservations/docker-tdewolff-minify
    steps:
      - run:
          name: install dependencies
          command: apk add --update ca-certificates openssl
      - attach_workspace:
          at: site
      - run: minify --recursive --html-keep-document-tags --output site/build/ site/build/
      - persist_to_workspace:
          root: site
          paths:
            - build/

  upload:
    docker:
      - image: google/cloud-sdk
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /gcloud-service-key.json
    steps:
      - run:
          name: authenticate with google cloud
          command: |
            echo "${GCLOUD_SERVICE_KEY}" > "${GOOGLE_APPLICATION_CREDENTIALS}"
            gcloud auth activate-service-account --key-file="${GOOGLE_APPLICATION_CREDENTIALS}"
            gcloud config set project "thekevjames-175823"
      - attach_workspace:
          at: artifacts
      - run: gsutil -m cp -r artifacts/* gs://thekevjames-artifacts
      - attach_workspace:
          at: site
      - run: gsutil -m cp -r site/build/* gs://thekev.in

workflows:
  version: 2
  run-jobs:
    jobs:
      - lint
      - hexclock
      - quotes
      - site
      - site-minify:
          requires:
            - site
      - upload:
          requires:
            - hexclock
            - quotes
            - site-minify
          filters:
            branches:
              only: master
